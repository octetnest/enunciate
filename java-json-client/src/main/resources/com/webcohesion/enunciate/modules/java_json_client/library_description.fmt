[#ftl]
[#--

    Copyright Â© 2006-2016 Web Cohesion (info@webcohesion.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--]
[#-- @ftlvariable name="sample_resource" type="com.webcohesion.enunciate.api.resources.Method" --]
<p>
  The Java client-side library is used to provide the set of Java objects that can be serialized
  to/from JSON using <a href="https://github.com/codehaus/jackson">Jackson</a>.  This is useful for accessing the
  JSON REST endpoints that are published by this application.
</p>
[#if sample_resource??]
  [#if sample_resource.responseEntity??]

<div class="panel panel-default">
  <div class="panel-heading">Resources Example (Raw JAXB)</div>
  <div class="panel-body">
    <pre class="prettyprint lang-java">
java.net.URL url = new java.net.URL(baseURL + "${sample_resource.resource.path}");
ObjectMapper mapper = new ObjectMapper();
java.net.URLConnection connection = url.openConnection();
[#if sample_resource.requestEntity??]
connection.setDoOutput(true);
[/#if]
connection.connect();

[#if sample_resource.requestEntity??]
mapper.writeValue(connection.getOutputStream(), ${simpleNameFor(sample_resource.requestEntity, false)?uncap_first?html});
[/#if]
${simpleNameFor(sample_resource.responseEntity, false)?html} result = (${simpleNameFor(sample_resource.responseEntity, false)?html}) mapper.readValue( connection.getInputStream(), ${simpleNameFor(sample_resource.responseEntity, false)?html}.class );
//handle the result as needed...
    </pre>
  </div>
</div>

<div class="panel panel-default">
  <div class="panel-heading">Resources Example (Jersey client)</div>
  <div class="panel-body">
    <pre class="prettyprint lang-java">
javax.ws.rs.client.Client client = javax.ws.rs.client.ClientBuilder.newClient();

${simpleNameFor(sample_resource.responseEntity, false)?html} result = client.target(baseUrl + "${sample_resource.resource.path}")
  .${sample_resource.httpMethod?lower_case}([#if sample_resource.requestEntity??]javax.ws.rs.client.Entity.entity(${simpleNameFor(sample_resource.requestEntity, false)?uncap_first?html}, "${mediaTypeFor(sample_resource.requestEntity)}"), [/#if]${simpleNameFor(sample_resource.responseEntity, false)?html}.class);

//handle the result as needed...
    </pre>
  </div>
</div>
  [/#if]
[/#if]