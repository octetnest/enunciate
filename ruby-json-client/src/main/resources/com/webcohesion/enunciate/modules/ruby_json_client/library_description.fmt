[#ftl]
[#--

    Copyright Â© 2006-2016 Web Cohesion (info@webcohesion.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--]
[#-- @ftlvariable name="sample_resource" type="com.webcohesion.enunciate.api.resources.Method" --]
<p>
  The Ruby JSON client-side library defines the Ruby classes that can be (de)serialized to/from JSON.
  This is useful for accessing the REST endpoints that are published by this application, but only
  those that produce a JSON representation of their resources (content type "application/json").
</p>

<p>
  This library leverages the <a href="http://flori.github.io/json/index.htm">Ruby JSON Implementation</a>, which is
  required in order to use this library.
</p>

[#if sample_resource?? && sample_resource.responseEntity??]

<div class="panel panel-default">
  <div class="panel-heading">Ruby JSON Example</div>
  <div class="panel-body">
    <pre class="prettyprint lang-ruby">
require 'net/https'
require 'uri'
//...

//read a resource from a REST url
url = URI.parse("...")
request = Net::HTTP::${sample_resource.httpMethod?lower_case?cap_first}.new(url.request_uri)
[#if sample_resource.requestEntity??]
input = ${classnameFor(sample_resource.requestEntity)}.new
//set up the ${classnameFor(sample_resource.requestEntity)}...
request.body = input.to_json
request['Content-Type'] = "application/json"
[/#if]

http = Net::HTTP.new(url.host, url.port)
//set up additional http stuff...
res = http.start do |ht|
  ht.request(request)
end

result = ${classnameFor(sample_resource.responseEntity)}.from_json(JSON.parse(res.body))

//handle the result as needed...
    </pre>
  </div>
</div>
[/#if]